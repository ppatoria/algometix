<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Algometix</title>
    <link>https://algometix.com/posts/</link>
    <description>Recent content in Posts on Algometix</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://algometix.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://algometix.com/posts/cache_coherence_protocols/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://algometix.com/posts/cache_coherence_protocols/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Title&lt;/strong&gt;: &amp;ldquo;An Overview of Cache Coherence Protocols in Multi-Core Architectures&amp;rdquo;&lt;br&gt;
&lt;strong&gt;Date&lt;/strong&gt;: 2025-02-03T12:00:00+05:30&lt;br&gt;
&lt;strong&gt;Author&lt;/strong&gt;: &amp;ldquo;Pralay Patoria&amp;rdquo;&lt;br&gt;
&lt;strong&gt;Tags&lt;/strong&gt;: [&amp;ldquo;C++&amp;rdquo;, &amp;ldquo;Performance&amp;rdquo;, &amp;ldquo;Cache Optimization&amp;rdquo;, &amp;ldquo;Multi-Core Architectures&amp;rdquo;]&lt;br&gt;
&lt;strong&gt;Categories&lt;/strong&gt;: [&amp;ldquo;Low-Latency Programming&amp;rdquo;, &amp;ldquo;Computer Architecture&amp;rdquo;]&lt;br&gt;
&lt;strong&gt;Draft&lt;/strong&gt;: true&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Modern multi-core processors rely on private caches to reduce latency and improve performance. However, when multiple cores access the same memory location, ensuring consistency across caches becomes essential. &lt;strong&gt;Cache coherence&lt;/strong&gt; guarantees that all cores observe a consistent view of memory, preventing stale or incorrect data from affecting computations.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
